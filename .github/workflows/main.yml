name: Deploy Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  EC2_HOST: 20.189.112.156

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Create SSH key
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    # Deploy to EC2
    - name: Deploy to EC2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ env.EC2_HOST }} << 'ENDSSH'
          # Navigate to app directory
          mkdir -p ~/app
          cd ~/app

          # Clone with token auth
          if [ ! -d ".git" ]; then
            git clone https://${{ secrets.TOKEN }}@github.com/${{ github.repository }}.git .
          else
            git fetch origin main
            git reset --hard origin/main
          fi

          # Ensure docker-compose file exists in the root directory
          if [ ! -f "docker-compose.yml" ]; then
            echo "Error: docker-compose.yml not found!"
            exit 1
          fi

          # Stop any running containers
          docker compose down || true

          # Build and start containers with specific path contexts
          docker compose build --no-cache
          docker compose up -d

          # Cleanup old images and containers
          docker system prune -f

    - name: Clean up SSH key
      if: always()
      run: rm -f ~/.ssh/id_rsa
