services:
  # Database Services
  mongo:
    image: mongo:latest
    container_name: syllabuzz-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=syllabuzz
    networks:
      - syllabuzz-network
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    container_name: syllabuzz-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - syllabuzz-network
    restart: unless-stopped

  # Backend Services
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: syllabuzz-server
    ports:
      - "5000:5000"
    volumes:
      - uploads:/app/uploads
    environment:
      - MONGO_URI=mongodb://mongo:27017/syllabuzz
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    depends_on:
      - mongo
      - qdrant
    networks:
      - syllabuzz-network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: syllabuzz-backend
    ports:
      - "3002:3000"
    volumes:
      - uploads:/app/uploads
    environment:
      - MONGO_URI=mongodb://mongo:27017/syllabuzz
      - QDRANT_URL=http://qdrant:6333
      - NODE_ENV=production
      - SERVER_URL=http://server:5000
    depends_on:
      - mongo
      - qdrant
      - server
    networks:
      - syllabuzz-network
    restart: unless-stopped

  client-v2:
    build:
      context: ./client-v2
      dockerfile: Dockerfile
    container_name: syllabuzz-client-v2
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SERVER_URL=http://server:5000/api
      - NEXT_PUBLIC_BACKEND_URL=http://backend:3000
      - NEXT_PUBLIC_API_BASE_URL=http://server:5000/api
    depends_on:
      - server
      - backend
    networks:
      - syllabuzz-network
    restart: unless-stopped

  # Proxy Manager (Optional - for production)
  proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: syllabuzz-proxy
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - proxy-data:/data
      - proxy-letsencrypt:/etc/letsencrypt
    networks:
      - syllabuzz-network

networks:
  syllabuzz-network:
    driver: bridge

volumes:
  uploads:
    driver: local
  mongo-data:
    driver: local
  qdrant-data:
    driver: local
  proxy-data:
    driver: local
  proxy-letsencrypt:
    driver: local